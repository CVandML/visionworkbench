#! /bin/sh

# __BEGIN_LICENSE__
#  Copyright (c) 2006-2012, United States Government as represented by the
#  Administrator of the National Aeronautics and Space Administration. All
#  rights reserved.
#
#  The NASA Vision Workbench is licensed under the Apache License,
#  Version 2.0 (the "License"); you may not use this file except in
#  compliance with the License. You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# __END_LICENSE__

### config.options.example
#
# This file demonstrates how to configure the NASA Vision Workbench 
# in various ways.  To use it, rename or copy it to "config.options" 
# and uncomment or modify the appropriate lines below.


### Configure Options
#
# Alternative command-line syntax:  --enable-foo[=val]
#
# These options allow you modify the basic behavior of the build
# environment.

# ENABLE_DEBUG=no
# ENABLE_OPTIMIZE=yes
# PREFIX=/foo/bar


### Module Configuration
#
# Alternative command-line syntax:  --enable-module-foo[=val]
#
# Uncomment the following lines to explicitly enable or disable
# certain modules.  These options override the default behavior, which
# is to build all modules that can be built with the libraries that
# you have installed on your system.  Note that no module will be
# built if its required software dependencies cannot be found.  Look
# at the output from ./configure to see what modules will ultimately
# be built.

# ENABLE_MODULE_MOSAIC=yes
# ENABLE_MODULE_CAMERA=yes
# ENABLE_MODULE_CARTOGRAPHY=yes
# ENABLE_MODULE_HDR=yes


### Package Base Paths 
#
# Alternative command-line syntax:  --with-paths=val
#
# Set these to the directories that contain lib/include directories
# for packages in non-standard locations.  List multiple search 
# directories by seperating them with whitespace.  

# PKG_PATHS="/foo/bar"

### Using pkg-config or *-config
#
# The only upstream-supported method of detecting some libraries is through the
# (new-style) pkg-config or (old-style) *-config (ex: gdal-config) scripts.
#
# Our build system doesn't support this directly yet, but this is the way we
# support using them:
#
# PKG_GDAL_CPPFLAGS=$(gdal-config --cflags)
# PKG_GDAL_LIBS=$(gdal-config --libs)
#
# or
#
# PKG_PNG_CPPFLAGS=$(pkg-config --cflags libpng)
# PKG_PNG_LIBS=$(pkg-config --libs libpng)

# The path to the installed 3rd party libraries
BASE=$HOME/projects/base_system

# Installation prefix
PREFIX=$PWD/build

ENABLE_DEBUG=yes
ENABLE_OPTIMIZE=yes
ENABLE_RPATH=yes
ENABLE_AS_NEEDED=yes
ENABLE_NO_UNDEFINED=yes
ENABLE_PKG_PATHS_DEFAULT=no
ENABLE_STATIC=no
ENABLE_QT-QMAKE=no

ENABLE_MODULE_CAMERA=yes
ENABLE_MODULE_MOSAIC=yes
ENABLE_MODULE_INTERESTPOINT=yes
ENABLE_MODULE_CARTOGRAPHY=yes
ENABLE_MODULE_HDR=yes
ENABLE_MODULE_STEREO=yes
ENABLE_MODULE_GEOMETRY=yes
ENABLE_MODULE_TOOLS=yes
ENABLE_MODULE_BUNDLEADJUSTMENT=yes
ENABLE_MODULE_GUI=yes
ENABLE_MODULE_GPU=no
ENABLE_MODULE_PLATE=no
ENABLE_MODULE_PYTHON=no

HAVE_PKG_JPEG=$BASE
PKG_JPEG_CPPFLAGS="-I$BASE/include"
PKG_JPEG_LDFLAGS="-L$BASE/lib"
HAVE_PKG_PNG=$BASE
PKG_PNG_CPPFLAGS="-I$BASE/include"
PKG_PNG_LDFLAGS="-L$BASE/lib"
HAVE_PKG_GDAL=$BASE
PKG_GDAL_CPPFLAGS="-I$BASE/include"
PKG_GDAL_LDFLAGS="-L$BASE/lib -ltiff -ljpeg -lpng -lz -lopenjp2"
HAVE_PKG_PROJ4=$BASE
PKG_PROJ4_CPPFLAGS="-I$BASE/include"
PKG_PROJ4_LDFLAGS="-L$BASE/lib"
HAVE_PKG_Z=$BASE
PKG_Z_CPPFLAGS="-I$BASE/include"
PKG_Z_LDFLAGS="-L$BASE/lib"
HAVE_PKG_ILMBASE=$BASE
PKG_ILMBASE_CPPFLAGS="-I$BASE/include"
PKG_ILMBASE_LDFLAGS="-L$BASE/lib"
HAVE_PKG_OPENEXR=$BASE
PKG_OPENEXR_CPPFLAGS="-I$BASE/include"
PKG_OPENEXR_LDFLAGS="-L$BASE/lib"
HAVE_PKG_BOOST=$BASE
PKG_BOOST_CPPFLAGS="-I$BASE/include"
PKG_BOOST_LDFLAGS="-L$BASE/lib"
HAVE_PKG_FLAPACK=$BASE
PKG_FLAPACK_CPPFLAGS="-I$BASE/include"
PKG_FLAPACK_LDFLAGS="-L$BASE/lib"
HAVE_PKG_PROTOBUF=$BASE
PKG_PROTOBUF_CPPFLAGS="-I$BASE/include"
PKG_PROTOBUF_LDFLAGS="-L$BASE/lib"
HAVE_PKG_FLANN=$BASE
PKG_FLANN_CPPFLAGS="-I$BASE/include"
PKG_FLANN_LDFLAGS="-L$BASE/lib"
HAVE_PKG_QT=$BASE
PKG_QT_CPPFLAGS="-I$BASE/include"
PKG_QT_LDFLAGS="-L$BASE/lib"
HAVE_PKG_ARBITRARY_QT=$BASE
PKG_ARBITRARY_QT_CPPFLAGS="-I$BASE/include"
PKG_ARBITRARY_QT_LDFLAGS="-L$BASE/lib"
HAVE_PKG_TIFF=no
HAVE_PKG_HDR=no
HAVE_PKG_CAIROMM=no
HAVE_PKG_TCMALLOC=no
HAVE_PKG_X11=no
HAVE_PKG_CLAPACK=no
HAVE_PKG_SLAPACK=no
HAVE_PKG_OPENCV=no
HAVE_PKG_CG=no
HAVE_PKG_ZEROMQ=no
HAVE_PKG_RABBITMQ_C=no
HAVE_PKG_QT_QMAKE=no
HAVE_PKG_APPLE_QMAKE_QT=no
HAVE_PKG_LINUX_QMAKE_QT=no
HAVE_PKG_GUESS_QT=no

QT_ARBITRARY_MODULES="QtCore QtGui QtNetwork QtSql QtSvg QtXml QtXmlPatterns"
PKG_ARBITRARY_QT_LIBS="-L$BASE/lib -lQtCore -lQtGui -lQtNetwork -lQtSql -lQtSvg -lQtXml -lQtXmlPatterns"
PKG_ARBITRARY_QT_MORE_LIBS="-lpng -lz"
MOC=$BASE/bin/moc
PROTOC=$BASE/bin/protoc

CPPFLAGS="-I$BASE/include -I$BASE/include/QtCore -I$BASE/include/QtGui -I$BASE/include/QtNetwork -I$BASE/include/QtSql -I$BASE/include/QtSvg -I$BASE/include/QtXml -I$BASE/include/QtXmlPatterns"

